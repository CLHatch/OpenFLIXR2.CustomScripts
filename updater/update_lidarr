#!/bin/bash
THISUSER=$(whoami)
    if [ $THISUSER != 'root' ]
        then
            echo 'You must use sudo to run this script, sorry!'
            exit  1
    fi

echo "Lidarr:"
# Get Lidarr state so we can return it to the same
wasactive=$(systemctl is-active lidarr)
# GitHub's web page format has changed. Just grab the download link and work with that instead of parsing the version title string.
link=$(wget -q https://github.com/lidarr/Lidarr/releases/latest -O - | grep -i href | grep -i linux.tar.gz | head -1 | awk -F "[\"]" '{print $2}')
latestver=$(echo $link | awk -F "[\/]" '{print $6}')
latestverurl=$(echo $link | awk -F "[\/]" '{print $1"/"$2"/"$3"/"$4"/"$5"/"$6"/"$7}')
link='https://github.com'$latestverurl
# Write some stuff to the log so we know what happened if it goes wrong
echo latestver = $latestver
currentver=$(strings -d /opt/Lidarr/Lidarr.Core.dll | grep .Common | grep Version | awk -F "[,]" '{print $3}' | awk -F "[=]" '{print "v"$2}')
echo currentver = $currentver
if [[ $currentver != $latestver ]]
then
  echo "Lidarr needs updating"
  echo "download link = $link"
  cd /tmp/
  rm Lidarr.develop.* 2> /dev/null
  dl=false
  wget -q --show-progress --progress=bar:force:noscroll $link && dl=true
  if [ $dl == true ]; then
    service lidarr stop
    tar -xvf Lidarr*
    cp -r Lidarr*/* /opt/Lidarr/
    chown -R openflixr: /opt/Lidarr/
    rm -rf Lidarr*/
    rm Lidarr.develop.*
    if [ $wasactive == "active" ]
    then
      echo "Starting Lidarr after update"
      service lidarr start
    else
      echo "Lidarr was not running before, so not starting it now"
    fi
  else
    echo 'Download failed!'
  fi
else
  echo "Lidarr is up to date"
fi

echo ""
